from flask import Flask, request, redirect, render_template_string
from werkzeug.utils import secure_filename
import os
import smtplib
from email.message import EmailMessage

app = Flask(__name__)
UPLOAD_FOLDER = 'uploads'
EMAIL_TO = 'info@kandval.com'  # –ü–æ–ª—É—á–∞—Ç–µ–ª—å –ø–∏—Å–µ–º (–º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å —Å–µ–±—è –∂–µ)

app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER

# –£–±–µ–¥–∏—Å—å, —á—Ç–æ –ø–∞–ø–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–æ–∫ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
os.makedirs(UPLOAD_FOLDER, exist_ok=True)

# üîê –¢–≤–æ–∏ SMTP-–¥–∞–Ω–Ω—ã–µ Zoho
SMTP_SERVER = 'smtp.zoho.eu'
SMTP_PORT = 465
SMTP_USER = 'admin@kandval.com'
SMTP_PASSWORD = 'PJp9QwFu3X6Z'  # –∑–∞–º–µ–Ω–∏—à—å –ø–æ–∑–∂–µ 

# HTML —Ñ–æ—Ä–º–∞
HTML_FORM = '''
<!DOCTYPE html>
<html>
<head>
    <title>–§–æ—Ä–º–∞ –∑–∞–∫–∞–∑–∞</title>
</head>
<body>
    <h2>–ó–∞–∫–∞–∑–∞—Ç—å —Ä–∞–±–æ—á—É—é –≤–µ—Ä—Å–∏—é</h2>
    <form action="/" method="POST" enctype="multipart/form-data">
        <label>–ò–º—è –§–∞–º–∏–ª–∏—è: <input type="text" name="name" required></label><br><br>
        <label>Email: <input type="email" name="email" required></label><br><br>
        <label>–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–∞–π–ª: <input type="file" name="file" required></label><br><br>
        <button type="submit">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
    </form>
</body>
</html>
'''

@app.route('/', methods=['GET', 'POST'])
def form():
    if request.method == 'POST':
        name = request.form['name']
        email = request.form['email']
        file = request.files['file']

        if file:
            filename = secure_filename(file.filename)
            filepath = os.path.join(app.config['UPLOAD_FOLDER'], filename)
            file.save(filepath)

            success = send_email(name, email, filepath)
            return '–§–æ—Ä–º–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!' if success else '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞.'
        else:
            return '–§–∞–π–ª –Ω–µ –±—ã–ª –ø—Ä–∏–∫—Ä–µ–ø–ª—ë–Ω.'
    return render_template_string(HTML_FORM)

def send_email(name, email, filepath):
    msg = EmailMessage()
    msg['Subject'] = f'–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç {name}'
    msg['From'] = SMTP_USER
    msg['To'] = EMAIL_TO
    msg.set_content(f'–ò–º—è: {name}\nEmail: {email}')

    with open(filepath, 'rb') as f:
        file_data = f.read()
        file_name = os.path.basename(filepath)
        msg.add_attachment(file_data, maintype='application', subtype='octet-stream', filename=file_name)

try:
    print(f"üì° –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ SMTP: {SMTP_SERVER}:{SMTP_PORT}")
    with smtplib.SMTP_SSL(SMTP_SERVER, SMTP_PORT) as server:
        print("üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è...")
        server.login(SMTP_USER, SMTP_PASSWORD)
        print("‚úâÔ∏è –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞...")
        server.send_message(msg)
    print("‚úÖ Email —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
    return True
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ SMTP: {e}")
    return False

if __name__ == '__main__':
    app.run(debug=True)